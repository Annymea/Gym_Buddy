name: Android CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run ktlintCheck
        run: ./gradlew ktlintCheck

      - name: Assemble APK
        run: ./gradlew assembleDebug

  unit-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew test

  integration-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus_5X
          avd-name: test
          emulator-options: "-no-window -no-audio -no-snapshot"

      - name: Wait for Android Emulator to boot
        run: adb wait-for-device

      - name: Run Instrumentation Tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Stop Emulator
        if: success() || failure()  # Dieser Befehl stellt sicher, dass der Emulator gestoppt wird, selbst wenn die Tests fehlschlagen
        run: adb -s emulator-5554 emu kill